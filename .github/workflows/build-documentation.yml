name: Build Documentation

# repository_dispatch is used to trigger the flow from Npgsql/EFCore.PG via HTTP POST
on: [push, pull_request, repository_dispatch]

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
    # Checkout all repos
    - name: Checkout repo
      uses: actions/checkout@v2.3.4
    - name: Checkout live branch
      uses: actions/checkout@v2.3.4
      with:
        ref: live
        path: live
    - name: Clear live docs repo
      run: rm -rf live/*
    - name: Checkout Npgsql
      uses: actions/checkout@v2.3.4
      with:
        repository: npgsql/npgsql
        path: Npgsql
    - name: Checkout EFCore.PG
      uses: actions/checkout@v2.3.4
      with:
        repository: npgsql/Npgsql.EntityFrameworkCore.PostgreSQL
        path: EFCore.PG

    # Setup software
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1.8.1
      with:
        dotnet-version: 5.0.x

    - name: Get mono
      run: |
        sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF
        echo "deb https://download.mono-project.com/repo/ubuntu stable-bionic main" | sudo tee /etc/apt/sources.list.d/mono-official-stable.list
        sudo apt-get update
        sudo apt-get install mono-complete --yes

    - name: Get docfx
      run: |
        curl -L https://github.com/dotnet/docfx/releases/download/v2.57.2/docfx.zip -o docfx.zip
        unzip -d .docfx docfx.zip

    - name: Build docs
      run:  mono .docfx/docfx.exe

    - name: Commit and push
      if: (github.event_name == 'push' || github.event_name == 'repository_dispatch') && github.repository == 'npgsql/doc' && github.ref == 'refs/heads/main'
      run: |
        export GIT_COMMITTER_NAME=$(git show -s --format='%cn')
        export GIT_COMMITTER_EMAIL=$(git show -s --format='%ce')
        export GIT_AUTHOR_NAME=$(git show -s --format='%an')
        export GIT_AUTHOR_EMAIL=$(git show -s --format='%ae')
        export COMMIT_HASH=$(git show -s --format='%H')
        export SUBJECT=$(git show -s --format='%s')
        cd live
        git add .
        git commit -m "$SUBJECT" -m "Original commit: $COMMIT_HASH"
        git push origin HEAD:live
